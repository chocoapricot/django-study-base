"""
Django settings for django_study_base project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gppj%s$_4n(c37_9czp0s#!e7-xr-@dyhx-c-3-e=m%qcj7a-8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Sitesフレームワークを追加
    'import_export',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'config',
    'apps.system.settings',
    'apps.system.settings.templatetags',
    'apps.system.useradmin',
    'apps.system.logs',
    'apps.api',
    'apps.staff',
    'apps.client',
    'apps.csstest',
    'apps.common',
    'apps.accounts',
    'apps.company',
]

# allauth設定
ACCOUNT_LOGIN_METHODS = ['email']  # メールのみでログイン
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # アカウント登録時のメール認証は必須
ACCOUNT_SIGNUP_FIELDS = ['email*']  # メール認証必須の場合は'email*'が必要
ACCOUNT_LOGIN_BY_CODE_ENABLED = False  # ログインコード機能を無効化
ACCOUNT_EMAIL_CONFIRMATION_HMAC = True  # HMACベースのメール確認を使用
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True  # メール確認後に自動ログイン
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = '/accounts/login/'  # 匿名ユーザーのリダイレクト先
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = '/'  # 認証済みユーザーのリダイレクト先
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # メールアドレスでの認証
ACCOUNT_UNIQUE_EMAIL = True  # メールアドレスの一意性を保証
ACCOUNT_USERNAME_REQUIRED = False  # ユーザー名は不要
ACCOUNT_FORMS = {
    'signup': 'apps.accounts.forms.CustomSignupForm',
    # 'reset_password': 'apps.accounts.forms.CustomResetPasswordForm',  # 一時的にコメントアウト
}

# ログインコード機能を完全に無効化
ACCOUNT_LOGIN_BY_CODE_TIMEOUT = 0  # タイムアウトを0に設定
ACCOUNT_LOGIN_BY_CODE_MAX_ATTEMPTS = 0  # 最大試行回数を0に設定

# パスワードリセット設定
ACCOUNT_PASSWORD_MIN_LENGTH = 8
ACCOUNT_PASSWORD_RESET_TOKEN_TIMEOUT = 86400  # 24時間（より長い有効期限）
ACCOUNT_PASSWORD_RESET_FROM_KEY_DONE_URL = '/accounts/login/'  # リセット完了後のリダイレクト先
ACCOUNT_PASSWORD_RESET_TIMEOUT = 86400  # パスワードリセットトークンの有効期限（秒）
ACCOUNT_PASSWORD_RESET_SERIALIZER = None  # デフォルトのシリアライザーを使用

ACCOUNT_ADAPTER = 'apps.accounts.adapters.CustomAccountAdapter'
SITE_ID = 1
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # 一時的に標準バックエンドに変更


MIDDLEWARE = [
    'django_currentuser.middleware.ThreadLocalUserMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),  # この行が必要
            os.path.join(BASE_DIR, 'venv', 'Lib', 'site-packages', 'allauth', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'apps.system.settings.context_processors.menu_items',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


AUTH_USER_MODEL = 'useradmin.CustomUser'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

# 認証関連の設定
LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'apps.system.useradmin.validators.MyPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ja-JP'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

# タイムゾーン関連の追加設定
import datetime
DATETIME_FORMAT = 'Y-m-d H:i:s'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'statics'),  # 'static'フォルダを追加
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TEST_RUNNER = 'config.test_runner.CustomTestRunner'
